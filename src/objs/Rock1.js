/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 rock1.glb
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

import { useCylinder } from "@react-three/cannon";

export function Rock1(props) {
  const { nodes, materials } = useGLTF('/models/rock1.glb')
  const args = [.4, .4, 0.6, 8]
  const move = [-.15, 0, .11]

  const [ref] = useCylinder(
    () => ({
      args,
      mass: 10000,
      position: [props.position[0] + move[0], props.position[1] + move[1] + 0.5, props.position[2] + move[2]]
    }),
    useRef(null),
  )

  return <>
    <group {...props} scale={0.2} dispose={null}>
      <mesh geometry={nodes.Icosphere.geometry} material={materials['Material.001']} position={[0, 0.78, 0]} scale={[1, 1.7, 1]} />
      <mesh geometry={nodes.Icosphere001.geometry} material={materials['Material.002']} position={[-1.55, 0.48, 0.08]} scale={[0.86, 1.43, 0.86]} />
      <mesh geometry={nodes.Icosphere002.geometry} material={materials['Material.003']} position={[-0.64, 0.6, 1.37]} rotation={[-Math.PI, 0.06, -Math.PI]} scale={[1.68, 0.76, 0.89]} />
    </group>
  </>
}

useGLTF.preload('/models/rock1.glb')
