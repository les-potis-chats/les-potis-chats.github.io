/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.1.4 cat.glb
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { AnimationMixer, LoopOnce } from 'three';
import { useFrame } from '@react-three/fiber';

export function Cat(props) {

  let mixer = null;
  const group = useRef()
  const { nodes, materials, animations } = useGLTF('/models/cat.glb')
  const { actions } = useAnimations(animations, group)

  // mixer = new AnimationMixer(nodes);
  // void mixer.clipAction(animations[0]).play();
  // useFrame((state, delta) => {
  //   mixer.update(delta);
  //   // console.log(ca);
  // });

  useEffect(() => {
    actions.ArmatureAction.setLoop(LoopOnce);

    setTimeout(() => {actions.ArmatureAction.play()}, 3000)
    
    console.log(actions.ArmatureAction);
  }, [])

  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="Armature">
          <primitive object={nodes.Bone} />
          <group name="cat">
            <skinnedMesh name="Plane" geometry={nodes.Plane.geometry} material={materials.peau} skeleton={nodes.Plane.skeleton} />
            <skinnedMesh name="Plane_1" geometry={nodes.Plane_1.geometry} material={materials['rose peau']} skeleton={nodes.Plane_1.skeleton} />
            <skinnedMesh name="Plane_2" geometry={nodes.Plane_2.geometry} material={materials.yeux} skeleton={nodes.Plane_2.skeleton} />
            <skinnedMesh name="Plane_3" geometry={nodes.Plane_3.geometry} material={materials['peau blanche']} skeleton={nodes.Plane_3.skeleton} />
          </group>
        </group>
        <group name="bowl">
          <mesh name="Plane001" geometry={nodes.Plane001.geometry} material={materials.Material} />
          <mesh name="Plane001_1" geometry={nodes.Plane001_1.geometry} material={materials['Material.001']} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('/models/cat.glb')
